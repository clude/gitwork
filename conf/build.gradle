buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.7.RELEASE")
    }
}

apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'jetty'
apply plugin: 'war'
apply plugin: 'maven'
 
version = '1.0'
 
// Uses JDK 7
sourceCompatibility = 1.7
targetCompatibility = 1.7
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8' 
 
// 1. Get dependencies from Maven local repository
// 2. Get dependencies from Maven central repository
repositories {
	mavenLocal()
    mavenCentral()
	maven { url "http://repo.spring.io/release" } 
}
 
dependencies {

//	spring
    compile 'org.springframework:spring-core:4.0.6.RELEASE'
	compile 'org.springframework:spring-context:4.0.6.RELEASE'
	compile 'org.springframework:spring-beans:4.0.6.RELEASE'
    compile 'org.springframework:spring-web:4.0.6.RELEASE'
    compile 'org.springframework:spring-jdbc:4.0.6.RELEASE'
	compile 'org.springframework:spring-tx:4.0.6.RELEASE'
    compile 'org.springframework:spring-orm:4.0.6.RELEASE'
    compile 'org.springframework:spring-jms:4.0.6.RELEASE'
	//compile 'org.springframework:spring-webmvc:4.0.6.RELEASE'
	
	compile 'jstl:jstl:1.2'
	 compile 'ognl:ognl:3.0.5'
    compile 'org.freemarker:freemarker:2.3.19'
	compile 'org.apache.velocity:velocity:1.7'
    compile 'org.apache.velocity:velocity-tools:2.0'
			
	//include in compile only, exclude in the war
	providedCompile 'javax.servlet:servlet-api:2.5'
 
    // struts 2
    compile 'org.apache.struts:struts2-core:2.3.16.3'
    compile 'org.apache.struts:struts2-spring-plugin:2.3.16.3'
	
	compile 'org.mybatis:mybatis:3.2.7'
    compile 'org.mybatis:mybatis-spring:1.2.2' 
    compile  'com.alibaba:druid:1.0.11'
   compile 'org.hibernate:hibernate-core:4.3.6.Final'
   compile 'org.javassist:javassist:3.15.0-GA'
   compile 'mysql:mysql-connector-java:5.1.31'
 
   	compile 'com.google.guava:guava:12.0'
	compile 'joda-time:joda-time:1.6.2'

			
    compile 'org.apache.httpcomponents:httpclient:4.2'
    compile 'org.apache.httpcomponents:httpcore:4.2.1'
    compile 'org.apache.httpcomponents:httpmime:4.2'
   // compile 'commons-httpclient:commons-httpclient:3.1'
   
    compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    compile  'org.glassfish.jersey.containers:jersey-container-jetty-servlet:2.13'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.13'
	
	compile 'org.apache.activemq:activemq-all:5.5.1'
    compile 'org.apache.activemq:activemq-pool:5.5.1'

    compile 'org.apache.shiro:shiro-core:1.2.0'
    compile 'org.apache.shiro:shiro-web:1.2.0'
    compile 'org.apache.shiro:shiro-ehcache:1.2.0'
    compile 'org.apache.shiro:shiro-spring:1.2.0'


    compile 'commons-collections:commons-collections:3.2.1'
    compile 'commons-fileupload:commons-fileupload:1.2.2'
    compile 'commons-lang:commons-lang:2.6'
	compile 'commons-io:commons-io:2.1'
    //compile 'commons-pool:commons-pool:1.5.6'
	//compile 'commons-dbcp:commons-dbcp:1.4'
   
    //    compile 'net.sf.json-lib:json-lib:2.4'
	
	// compile 'commons-logging:commons-logging:1.1.1'
	// compile 'log4j:log4j:1.2.17'
    // compile 'org.slf4j:slf4j-log4j12:1.7.7'
    compile 'org.slf4j:slf4j-api:1.5.11'
    compile 'ch.qos.logback:logback-core:1.0.0'
    compile 'ch.qos.logback:logback-classic:1.0.0'
	
	compile 'org.testng:testng:6.8.8'
	compile 'net.sourceforge.cobertura:cobertura:1.9.4.1'
    testRuntime 'net.sourceforge.cobertura:cobertura:1.9.4.1'
    testCompile 'junit:junit:4.5'
	
	
	//compile files('libs/orderservice_stub.jar','libs/ojdbc6.jar')
}

/* Change context path (base url). otherwise defaults to name of project */
[jettyRunWar, jettyRun]*.contextPath = '/'

war {
    baseName='war_app_name';
}

task printProperties << {
	println project.name
	println project.path
	println project.group
}

task copyJars(type: Copy) { 
    from configurations.runtime 
    into 'lib' 
}

task mybatis << {
	ant.taskdef(name: 'genfiles', classname: 'org.mybatis.generator.ant.GeneratorAntTask' ){
	    classpath {
            fileset(dir: "libs", includes: '*.jar')
        }
	}
	ant.genfiles(overwrite: 'true', configfile : "$projectDir/src/main/resources/mybatis_generator.xml" , verbose: 'false')
}

tasks.mybatis.dependsOn "copyJars"

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}
