kafka
http://www.aboutyun.com/thread-9906-1-1.html   kafka客户端开发-java
http://blog.csdn.net/honglei915/article/details/37563647
http://doc.okbase.net/QING____/archive/19447.html
http://news.csdn.net/article_preview.html?preview=1&reload=1&arcid=2825342  七牛是如何搞定每天500亿条日志的  Flume、Kafka、Spark以及Streaming
http://www.open-open.com/lib/view/open1412991579999.html   kafka java 生产消费程序demo示例
http://www.weixinyidu.com/n_366292
http://www.cnblogs.com/oftenlin/p/4045924.html
http://blog.csdn.net/honglei915/article/details/37564329  Kafka运行环境
http://blog.csdn.net/honglei915/article/details/37564521  简单介绍
http://blog.csdn.net/honglei915/article/details/37932819
http://my.oschina.net/cloudcoder/blog/299215   Kafka JAVA客户端代码示例
http://www.iteblog.com/archives/1084   Apache Kafka监控之Kafka Web Console
http://www.centoscn.com/CentosServer/cluster/2015/0312/4863.html  Centos安装Kafka集群
http://www.cnblogs.com/oftenlin/p/4047504.html   kafka 集群安装与安装测试
Partition：为了实现扩展性，一个非常大的topic可以分布到多个broker（即服务器）上，一个topic可以分为多个partition，每个partition是一个有序的队列。partition中的每条消息都会被分配一个有序的id（offset）。kafka只保证按一个partition中的顺序将消息发给consumer，不保证一个topic的整体（多个partition间）的顺序。
Offset：kafka的存储文件都是按照offset.kafka来命名
物理上把Topic分成一个或多个Partition，每个Partition在物理上对应一个文件夹，该文件夹下存储这个Partition的所有消息和索引文件
Kafka提供两种策略删除旧数据。一是基于时间，二是基于Partition文件大小。例如可以通过配置$KAFKA_HOME/config/server.properties，让Kafka删除一周前的数据，也可在Partition文件超过1GB时删除旧数据
server.properties中通过配置项num.partitions来指定新建Topic的默认Partition数量，也可在创建Topic时通过参数指定
http://www.infoq.com/cn/author/%E9%83%AD%E4%BF%8A#文章
broker change是由BrokerChangeListener监听类，监听/brokers/ids下得brokerid
多个partition需要选取出lead partition，lead partition负责读写，并由zookeeper负责fail over
对于一个topic,同一个group中不能有多于partitions个数的consumer同时消费  Kafka保证的是稳定状态下每一个Consumer实例只会消费某一个或多个特定 Partition的数据，而某个Partition的数据只会被某一个特定的Consumer实例所消费。也就是说Kafka对消息的分配是以 Partition为单位分配的，而非以每一条消息作为分配单元。这样设计的劣势是无法保证同一个Consumer Group里的Consumer均匀消费数据
http://sookocheff.com/post/kafka/kafka-in-a-nutshell/
http://www.tuicool.com/articles/R3A3Y3    Producer端使用zookeeper用来"发现"broker列表,以及和Topic下每个partition leader建立socket连接并发送消息.
http://www.infoq.com/cn/articles/kafka-analysis-part-4   Kafka设计解析（四）：Kafka Consumer解析
 
http://queues.io/
https://github.com/huanghua581/notes/blob/master/PHP/%E5%B8%B8%E8%A7%81%E5%BC%80%E6%BA%90%E6%B6%88%E6%81%AF%E7%B3%BB%E7%BB%9F.md

https://github.com/antirez/disque  alpha
 


activemq
http://blog.csdn.net/a19881029/article/details/35279677 
http://blog.csdn.net/johnny901114/article/details/8898727
http://www.cnblogs.com/rongfengliang/articles/3420652.html
http://www.hivemq.com/wp-content/uploads/hivemq_websocket_demo_app.html


RocketMQ的前身是Metaq，当Metaq3.0发布时，产品名称改为RocketMQ
https://github.com/alibaba/RocketMQ/wiki/rmq_vs_kafka  比较
http://blog.csdn.net/a19881029/article/details/34446629
http://my.oschina.net/firxiao/blog/314834   RocketMQ 消息队列简单部署
http://my.oschina.net/cloudcoder/blog/200741   	RocketMQ：一个纯java的开源消息中间件--开发测试环境搭建
http://blog.csdn.net/a19881029/article/details/34446629
 

metaq 的zk目录结构在 com.taobao.metamorphosis.utils.MetaZookeeper 这个Meta与zookeeper交互的辅助类中

zk
http://blog.csdn.net/xiaolang85/article/details/13021339
http://www.cnblogs.com/ggjucheng/p/3352591.html
http://www.coder4.com/archives/3122